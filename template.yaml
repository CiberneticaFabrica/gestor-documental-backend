AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  document-manager-user-management
 
  Sample SAM Template for document-manager-user-management
 
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 600
    MemorySize: 256
    Tracing: Active
    Runtime: python3.9
    Environment:
      Variables:
        DB_HOST: !Ref DBHost
        DB_USER: !Ref DBUser
        DB_PASSWORD: kYcwbOLpRKX1TpTMiAC6
        DB_NAME: gestor_documental
        SESSION_EXPIRY_MINUTES: 1440
  Api:
    TracingEnabled: true
    # Configuración global de CORS para todas las APIs
    Cors:
      AllowMethods: "'GET, POST, PUT, DELETE, OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"  # En producción, específica tus dominios en lugar de *
      MaxAge: "'600'"
 
Parameters:
  DBHost:
    Type: String
    Default: fabrica-gestor-documental.c642nkfthejp.us-east-1.rds.amazonaws.com
    Description: RDS Host Address
  DBName:
    Type: String
    Default: fabrica-gestor-documental
    Description: Database Name
  DBUser:
    Type: String
    Default: admin
    Description: Database Username
  DBPassword:
    Type: String
    NoEcho: true
    Description: Database Password
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the Lambda functions will run
  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: First private subnet for Lambda functions
  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Second private subnet for Lambda functions
 
Resources:
  # Definición del API Gateway con CORS habilitado
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET, POST, PUT, DELETE, OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"  # En producción, específica tus dominios en lugar de *
        MaxAge: "'600'"

  DocumentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-documents-processed"
      VersioningConfiguration:
        Status: Enabled

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: auth.authentication.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Manejamos OPTIONS para cada ruta para CORS preflight
        LoginOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/login
            Method: OPTIONS
        Login:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/login
            Method: POST
        LogoutOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/logout
            Method: OPTIONS
        Logout:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/logout
            Method: POST
        RegisterOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/register
            Method: OPTIONS
        Register:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/register
            Method: POST
        ValidateOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/validate
            Method: OPTIONS
        Validate:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/validate
            Method: POST
        RefreshOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/refresh
            Method: OPTIONS
        Refresh:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/refresh
            Method: POST
        PasswordChangeOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/password/change
            Method: OPTIONS
        PasswordChange:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/password/change
            Method: POST
        RequestPasswordResetOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/password/reset/request
            Method: OPTIONS
        RequestPasswordReset:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/password/reset/request
            Method: POST
        PasswordResetOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/password/reset/confirm
            Method: OPTIONS
        PasswordReset:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/password/reset/confirm
            Method: POST
        2faSetupOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/2fa/setup
            Method: OPTIONS
        2faSetup:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/2fa/setup
            Method: POST
        2faVerifyOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/2fa/verify
            Method: OPTIONS
        2faVerify:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/2fa/verify
            Method: POST
        2faLoginOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/2fa/login
            Method: OPTIONS
        2faLogin:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /auth/2fa/login
            Method: POST
  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: users.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:    
        UsersPathOptions:  # Un solo manejador OPTIONS para la ruta /users
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users
            Method: OPTIONS
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users
            Method: GET
        CreateUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users
            Method: POST
        UserByIdOptions:  # Un solo manejador OPTIONS para la ruta /users/{id}
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}
            Method: OPTIONS
        GetUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}
            Method: GET
        UpdateUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}
            Method: PUT
        DeleteUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}
            Method: DELETE
        UserActivityOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/activity
            Method: OPTIONS
        GetUserActivity:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/activity
            Method: GET
        UserSessionsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/sessions
            Method: OPTIONS
        GetActiveSessions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/sessions
            Method: GET
        UserDisableOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/disable
            Method: OPTIONS
        DisableUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/disable
            Method: PUT
        UserPasswordChangeOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/force-password-change
            Method: OPTIONS
        ForcePasswordChange:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/force-password-change
            Method: PUT
        UserRolesOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/roles
            Method: OPTIONS  
        GetUserRoles:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/roles
            Method: GET  
        UpdateUserRoles:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/roles
            Method: PUT
        UserRolesAssignOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/roles/assign
            Method: OPTIONS
        AssignUserRoles:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/roles/assign
            Method: POST
        UserRolesRemoveOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/roles/remove
            Method: OPTIONS
        RemoveUserRoles:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/roles/remove
            Method: DELETE
        UserGroupsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/groups
            Method: OPTIONS
        GetUserGroups:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/groups
            Method: GET
        UpdateUserGroups:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/groups
            Method: PUT 
        UserGroupsAssignOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/groups/assign
            Method: OPTIONS
        AssignUserGroups:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/groups/assign
            Method: POST
        UserGroupsRemoveOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/groups/remove
            Method: OPTIONS
        RemoveUserGroups:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/groups/remove
            Method: POST
        UserPermissionsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/permissions
            Method: OPTIONS
        GetUserPermissions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/permissions
            Method: GET
  PermissionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: permissions.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Rutas de gestión de roles
        RolesPathOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles
            Method: OPTIONS
        ListRoles:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles
            Method: GET
        CreateRole:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles
            Method: POST
        RoleByIdOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}
            Method: OPTIONS
        GetRole:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}
            Method: GET
        UpdateRole:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}
            Method: PUT
        DeleteRole:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}
            Method: DELETE 
            
        # Rutas de gestión de permisos
        PermissionsPathOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /permissions
            Method: OPTIONS
        ListPermissions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /permissions
            Method: GET
        CreatePermission:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /permissions
            Method: POST
        PermissionByIdOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /permissions/{id}
            Method: OPTIONS
        GetPermission:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /permissions/{id}
            Method: GET
        UpdatePermission:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /permissions/{id}
            Method: PUT
        DeletePermission:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /permissions/{id}
            Method: DELETE
            
        # Rutas de gestión de roles-permisos
        RolePermissionsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}/permissions
            Method: OPTIONS
        GetRolePermissions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}/permissions
            Method: GET
        AssignPermissionsToRole:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}/permissions
            Method: POST
        RemovePermissionsFromRole:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}/permissions
            Method: DELETE
        RolePermissionCheckOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}/permissions/{permission_id}
            Method: OPTIONS
        CheckRolePermission:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /roles/{id}/permissions/{permission_id}
            Method: GET     
            
        # Rutas de gestión de permisos de usuario
        UserPermissionOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/permission
            Method: OPTIONS
        GetUserPermissions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/permission
            Method: GET
        UserPermissionCheckOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/permissions/{permission_code}
            Method: OPTIONS
        CheckPermission:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users/{id}/permissions/{permission_code}
            Method: GET
  DashboardMetricsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: dashboard.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Main dashboard metrics endpoint
        DashboardMetricsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics
            Method: OPTIONS
        DashboardMetricsGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics
            Method: GET
        # Document metrics endpoint
        DashboardDocumentsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/documents
            Method: OPTIONS
        DashboardDocumentsGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/documents
            Method: GET
        # User metrics endpoint
        DashboardUsersOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/users
            Method: OPTIONS
        DashboardUsersGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/users
            Method: GET
        # Processing metrics endpoint
        DashboardProcessingOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/processing
            Method: OPTIONS
        DashboardProcessingGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/processing
            Method: GET
        # Classification accuracy endpoint
        DashboardClassificationOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/classification
            Method: OPTIONS
        DashboardClassificationGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/classification
            Method: GET
        # Extraction confidence endpoint
        DashboardExtractionOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/extraction
            Method: OPTIONS
        DashboardExtractionGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/extraction
            Method: GET
        # Document volume trends endpoint
        DashboardVolumeOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/volume
            Method: OPTIONS
        DashboardVolumeGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/volume
            Method: GET
        # Processing times endpoint
        DashboardTimingOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/timing
            Method: OPTIONS
        DashboardTimingGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/timing
            Method: GET
        # Activity metrics endpoint
        DashboardActivityOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/activity
            Method: OPTIONS
        DashboardActivityGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /dashboard/metrics/activity
            Method: GET
  DocumentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: documents.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
        - S3CrudPolicy:  # Añadir esta política
           BucketName: gestor-documental-bancario-documents-input
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Document management routes
        DocumentsPathOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents
            Method: OPTIONS
        ListDocuments:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents
            Method: GET
        CreateDocument:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents
            Method: POST
        DocumentByIdOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}
            Method: OPTIONS
        GetDocument:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}
            Method: GET
        UpdateDocument:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}
            Method: PUT
        DeleteDocument:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}
            Method: DELETE
        DocumentMoveOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/move
            Method: OPTIONS
        DocumentMove:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/move
            Method: POST
           
        # Document versions routes
        DocumentVersionsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/versions
            Method: OPTIONS
        ListDocumentVersions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/versions
            Method: GET
        CreateDocumentVersion:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/versions
            Method: POST
        DocumentVersionByIdOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/versions/{version_id}
            Method: OPTIONS
        GetDocumentVersion:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/versions/{version_id}
            Method: GET
           
        # Document history route
        DocumentHistoryOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/history
            Method: OPTIONS
        GetDocumentHistory:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/history
            Method: GET
  DocumentViewerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: document_viewer.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          DOCUMENTS_BUCKET: !Ref DocumentsBucket
          URL_EXPIRATION_SECONDS: 3600
          PREVIEW_SIZE: "800x600"
      Policies:
        - VPCAccessPolicy: {}
        - S3ReadPolicy:
            BucketName: !Ref DocumentsBucket
        - S3ReadPolicy:
            BucketName: "gestor-documental-bancario-documents-processed"
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Rutas para visualización de documentos
        DocumentContentOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/content
            Method: OPTIONS
        GetDocumentContent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/content
            Method: GET
        DocumentPreviewOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/preview
            Method: OPTIONS
        GetDocumentPreview:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/preview
            Method: GET
        DocumentDownloadOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/download
            Method: OPTIONS
        GenerateDownloadUrl:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/download
            Method: GET
        DocumentExtractedOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/extracted
            Method: OPTIONS
        GetExtractedData:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/extracted
            Method: GET
        DocumentMetadataOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/metadata
            Method: OPTIONS
        GetDocumentMetadata:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/{id}/metadata
            Method: GET
  FolderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: folders.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Rutas de gestión de carpetas
        FoldersPathOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders
            Method: OPTIONS
        ListFolders:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders
            Method: GET
        CreateFolder:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders
            Method: POST
        FolderByIdOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}
            Method: OPTIONS
        GetFolder:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}
            Method: GET
        UpdateFolder:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}
            Method: PUT
        DeleteFolder:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}
            Method: DELETE
            
        # Rutas de gestión de documentos en carpetas
        FolderDocumentsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}/documents
            Method: OPTIONS
        ListFolderDocuments:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}/documents
            Method: GET
            
        # Rutas de gestión de permisos de carpetas
        FolderPermissionsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}/permissions
            Method: OPTIONS
        GetFolderPermissions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}/permissions
            Method: GET
        SetFolderPermissions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}/permissions
            Method: POST
        RemoveFolderPermissions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /folders/{id}/permissions
            Method: DELETE
  DocumentSearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: search.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Rutas de búsqueda
        DocumentsSearchOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/search
            Method: OPTIONS
        DocumentsSearch:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/search
            Method: POST
        DocumentsSuggestOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/suggest
            Method: OPTIONS
        DocumentsSuggest:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/suggest
            Method: GET
        DocumentsMetadataFilterOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/metadata-filter
            Method: OPTIONS
        DocumentsMetadataFilter:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/metadata-filter
            Method: POST
        SaveSearchOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/searches/save
            Method: OPTIONS
        SaveSearch:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/searches/save
            Method: POST
        ExecuteSearchOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/searches/execute
            Method: OPTIONS
        ExecuteSearch:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/searches/execute
            Method: POST
        GetSavedSearchesOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/searches
            Method: OPTIONS
        GetSavedSearches:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/searches
            Method: GET
        DeleteSavedSearchOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/searches/{id}
            Method: OPTIONS
        DeleteSavedSearch:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents/searches/{id}
            Method: DELETE    
  ClientFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: clients.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Rutas de gestión de clientes
        ClientsPathOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients
            Method: OPTIONS
        ListClients:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients
            Method: GET
        CreateClient:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients
            Method: POST
        ClientByIdOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}
            Method: OPTIONS
        GetClient:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}
            Method: GET
        UpdateClient:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}
            Method: PUT
        DeleteClient:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}
            Method: DELETE
        ClientsMetricsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/metrics
            Method: OPTIONS
        ClientsMetrics:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/metrics
            Method: GET
        # Rutas para documentos del cliente
        ClientDocumentsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents
            Method: OPTIONS
        GetClientDocuments:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents
            Method: GET
        # Rutas para solicitudes de documentos
        ClientRequestsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/requests
            Method: OPTIONS
        GetClientRequests:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/requests
            Method: GET
        CreateDocumentRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/requests
            Method: POST
        RequestByIdOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/requests/{request_id}
            Method: OPTIONS
        UpdateDocumentRequest:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/requests/{request_id}
            Method: PUT
        # Nuevas rutas para la Vista 360° del cliente
        ClientCompletenessOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/completeness
            Method: OPTIONS
        GetClientCompleteness:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/completeness
            Method: GET
        ClientRiskOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/risk
            Method: OPTIONS
        GetClientRisk:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/risk
            Method: GET
        ClientActivityOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/activity
            Method: OPTIONS
        GetClientActivity:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/activity
            Method: GET
        DocumentStatusOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents/status
            Method: OPTIONS
        GetDocumentStatus:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents/status
            Method: GET
        PendingDocumentsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents/pending
            Method: OPTIONS
        GetPendingDocuments:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents/pending
            Method: GET
        ExpiringDocumentsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents/expiring
            Method: OPTIONS
        GetExpiringDocuments:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents/expiring
            Method: GET
        DocumentRequestsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents/requests
            Method: OPTIONS
        TrackDocumentRequests:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clients/{id}/documents/requests
            Method: GET
  AuditLogsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: auditlog.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        # Options handlers for CORS preflight
        AuditLogsOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs
            Method: OPTIONS
        AuditLogDetailOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/{id}
            Method: OPTIONS
        AuditLogsExportOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/export
            Method: OPTIONS
        AuditLogsUserOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/users/{user_id}
            Method: OPTIONS
        AuditLogsDocumentOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/documents/{document_id}
            Method: OPTIONS
        AuditLogsSecurityOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/security
            Method: OPTIONS
            
        # Regular routes
        ListAuditLogs:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs
            Method: GET
        GetAuditLog:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/{id}
            Method: GET
        ExportAuditLogs:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/export
            Method: POST
        GetUserActivity:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/users/{user_id}
            Method: GET
        GetDocumentActivity:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/documents/{document_id}
            Method: GET
        GetSecurityEvents:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /audit-logs/security
            Method: GET
  MigrationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: migration.app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
      Events:
        MigrationOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /migration
            Method: OPTIONS
        MigrationPost:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /migration
            Method: POST
        MigrationStatusOptions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /migration/status
            Method: OPTIONS
        MigrationStatusGet:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /migration/status
            Method: GET
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda functions to access RDS
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  
Outputs:
  ApiGatewayUrl:
    Description: URL of the API Gateway
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  AuthApi:
    Description: API Gateway endpoint URL for Prod stage for Auth function
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/"
  AuthFunctionArn:
    Description: Auth Lambda Function ARN
    Value: !GetAtt AuthFunction.Arn
  AuthFunctionIamRole:
    Description: Implicit IAM Role created for Auth function
    Value: !GetAtt AuthFunctionRole.Arn
  # Add to existing Outputs section
  PermissionsApi:
    Description: API Gateway endpoint URL for Prod stage for Permissions function
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/roles/"
  PermissionsFunctionArn:
    Description: Permissions Lambda Function ARN
    Value: !GetAtt PermissionsFunction.Arn
  PermissionsFunctionIamRole:
    Description: Implicit IAM Role created for Permissions function
    Value: !GetAtt PermissionsFunctionRole.Arn
  # Add new outputs for DocumentFunction
  DocumentsApi:
    Description: API Gateway endpoint URL for Prod stage for Document function
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/documents/"
  DocumentFunctionArn:
    Description: Document Lambda Function ARN
    Value: !GetAtt DocumentFunction.Arn
  DocumentFunctionIamRole:
    Description: Implicit IAM Role created for Document function
    Value: !GetAtt DocumentFunctionRole.Arn
  # Add new outputs for FolderFunction
  DocumentSearchApi:
    Description: API Gateway endpoint URL for Prod stage for Document Search function
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/documents/search"
  DocumentSearchFunctionArn:
    Description: Document Search Lambda Function ARN
    Value: !GetAtt DocumentSearchFunction.Arn
  DocumentSearchFunctionIamRole:
    Description: Implicit IAM Role created for Document Search function
    Value: !GetAtt DocumentSearchFunctionRole.Arn
  DocumentViewerApi:
    Description: API Gateway endpoint URL for Prod stage for Document Viewer function
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/documents/{id}/"
  DocumentViewerFunctionArn:
    Description: Document Viewer Lambda Function ARN
    Value: !GetAtt DocumentViewerFunction.Arn
  DocumentViewerFunctionIamRole:
    Description: Implicit IAM Role created for Document Viewer function
    Value: !GetAtt DocumentViewerFunctionRole.Arn
  DashboardMetricsApi:
    Description: API Gateway endpoint URL for Prod stage for Dashboard Metrics functions
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/dashboard/metrics"
  DashboardMetricsFunctionArn:
    Description: Dashboard Metrics Lambda Function ARN
    Value: !GetAtt DashboardMetricsFunction.Arn
  DashboardMetricsFunctionIamRole:
    Description: Implicit IAM Role created for Dashboard Metrics function
    Value: !GetAtt DashboardMetricsFunctionRole.Arn